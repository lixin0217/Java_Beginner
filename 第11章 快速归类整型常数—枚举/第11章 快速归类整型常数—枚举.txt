第11章 快速归类整型常数—枚举

枚举是一个被命名的整型常数的集合。我们可以事先考虑到某一变量可能取的值，尽量用自然语言中含义清楚的单词来表示它的每一个值，这种方法称为枚举方法，用这种方法定义的类型称为枚举类型。本章将介绍在Java中使用枚举的相关知识，包括枚举的定义、类集对于枚举的支持、枚举的接口等。

11.1 枚举简介
在JDK 1.5，Java引入的一种新类型——枚举类型（Enumerated Type）,定义时，它使用enum关键字标识。例如，表示一周的星期几，用SUNDAY、MONDAY、TUESDAY、WEDNESDAY、THURSDAY、FRIDAY、SATURDAY就可表示为一个枚举。而在本质上，SUNDAY就表示0，MONDAY就表示1，…，SATURDAY就表示6。由此可见,，相比于“无明确含义”的纯数字“0， 1，2，…，6”，枚举所用的自然表示法让程序更具有可读性。

11.2 自定义的枚举
【范例11-1】 在未出现枚举关键字前如何使用枚举功能(Color.java)。
由于在JDK1.5之前，Java虚拟机中并没有关于枚举类型的包，所以使用枚举的时候，只能够从自己创造的构造方法中引入。
对构造方法进行私有化之后，如果想访问自己构建的类似于C/C++中枚举数据，需要通过static属性得到Color的实例化对象，或者用静态方法getInstance()来取得。

11.3 Java中的枚举
JDK1.5之后， Java语言中新出现的类型诸如枚举类型等一系列新的数据，这些类型的出现表明Java日趋完善，编程语言的日益人性化。

11.3.1 常见的枚举定义方法
在枚举类型中，一般的定义形式如下。
enum 枚举名 {枚举值表};
其中enum是Java中的关键字。在枚举值表中应罗列出所有的可用值，这些值也称为枚举元素。
枚举变量也可用不同的方式说明，如先定义后说明、定义的同时说明或直接说明。

11.3.2 在程序中使用枚举
当创建了一个枚举类型之后，就意味着可在今后的代码中进行调用。调用先前定义的枚举类型，同其他的调用语句一样，需要声明该类的一个对象，并通过对象对枚举类型进行操作。

【范例11-2】 在Java中使用枚举（EnumColor.java）。
通过Java提供的枚举类型，可以很轻松地调用枚举中的每一种颜色。而且，使用此方式还可以避免之前使用接口实现枚举的操作。

11.3.3 在switch语句中使用枚举
使用Enum关键字创建的枚举类型，也可以直接在多处控制语句中使用，如Switch语句等。在JDK1.5之前，switch语句只能用于判断字符或数字，它并不能对在枚举中罗列的内容进行判断和选择。而在JDK 1.5之后，通过Enum创建的枚举类型，也可以被Switch判断使用。

【范例11-3】 在switch中使用枚举（EnumSwitch.java）。

11.4 枚举类和枚举关键字
枚举类型的出现，有助于简洁程序的代码量，减少出错量。在大多数情况下，枚举类和枚举关键字是相互依存的。枚举关键字是定义枚举类型时必不可少的声明，而枚举类则是规定的枚举类型母类。

11.4.1 枚举类
枚举类（Enum类）是在Java.lang包下定义的一个公共类，它的作用是用来构造新的枚举类型。这是在JDK1.5之后Java推出的一个新的类，用来弥补关于枚举这一常用集合在Java中的不足。同时， Enum类中的构造方法可方便对代码的操作。

在JDK API中可以看到，在Enum类中定义了大约十多个方法，每一种方法都是对用Enum创建的枚举对象实施操作，所以Enum类是一个完整的类型。它拥有自己的方法，当创建一个关于Enum的类型对象时，便可调用其中的方法来完善对于枚举类型的操作。

【范例11-4】 通过values()方法得到对象取值（ValueOfEnum.java）。
枚举关键字（enum）是定义的一个枚举类型。实际上，在此次定义的过程中，通过enum关键字相当于定义了一个类，并且此类将继承自Enum类。读者可能会注意到，在上面的Enum类“方法概要”的表格中，并没有列出来values()方法。实际上，这是编译器添加的隐式方法，如果一个对象被声明为enum类型，编译器会自动给该类型添加一个隐含的方法values()，它的原型为：
public static E[] values();

11.4.2 枚举关键字
被定义的对象拥有Enum类中的构造方法的使用权。如上面的Enum类“方法概要”的表中所示，在Enum类中的构造方法中是受保护的，实际上对于每一个枚举的对象一旦声明之后，就表示自动调用此构造方法，所有的编号方式均采用自动编号的方式进行。在没有对编号做出特殊声明时，Java虚拟机一般将对被创建的枚举类型对象自动编号，编号从0开始。

【范例11-5】 通过调用Enum类中的ordinal()方法，输出枚举类型中每一个对象的编号（OrderOfEnum.java）。

11.4.3 枚举类与枚举关键字的联系
在JDK API（应用程序接口，Application Programming Interface，简称API）中，找到Java.lang下的Enum类，可看到许多关于Enum类的方法

【范例11-6】 调用Enum类中的valueof()方法（ValueOfEnum2.java）。




