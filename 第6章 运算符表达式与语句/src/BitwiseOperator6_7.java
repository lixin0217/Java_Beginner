/**
 * 【范例6-7】 “按位与”和“按位或”操作（BitwiseOperator6 7.java）。
 * 第06行，实现与操作，相“与”的两位，如果全部为1结果才是1，有一个为0结果就是0。
 * 13的二进制： 00000000 00000000 00000000 00001101
 * 7的二进制： 00000000 00000000 00000000 00000111
 * “与”&的结果： 00000000 00000000 00000000 00000101
 * 所以输出的结果为5。
 *
 * 第07行，实现或操作，位“或”的两位，如果全为0才是0，有一个为1结果就是1。
 * 13的二进制： 00000000 00000000 00000000 00001101
 * 7的二进制： 00000000 00000000 00000000 00000111
 * “或”|的结果： 00000000 00000000 00000000 00001111
 * 所以输出的结果为15。
 */
public class BitwiseOperator6_7 {
    public static void main(String[] args) {
        int x = 13; //00001101 = 13
        int y = 7; //00000111 = 7
        System.out.println(x + " & " + y + " = " + (x & y));//00000101 = 5
        System.out.println(x + " | " + y + " = " + (x | y));//00001111 = 15
    }
}
